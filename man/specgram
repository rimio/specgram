.TH SPECGRAM 1 "2020-12-25"

.SH NAME
specgram \- create spectrograms from raw files or standard input

.SH SYNOPSIS
.B specgram
[\fB\-aehlqvz\fR]
[\fB\-i, --input\fR=\fIRATE\fR]
[\fB\-r, --rate\fR=\fIRATE\fR]
[\fB\-d, --datatype\fR=\fIDATA_TYPE\fR]
[\fB\-b, --block_size\fR=\fIBLOCK_SIZE\fR]
[\fB\-f, --fft_width\fR=\fIFFT_WIDTH\fR]
[\fB\-g, --fft_stride\fR=\fIFFT_STRIDE\fR]
[\fB\-n, --window_function\fR=\fIWIN_FUNC\fR]
[\fB\-s, --alias\fR=\fIALIAS\fR]
[\fB\-w, --width\fR=\fIWIDTH\fR]
[\fB\-x, --fmin\fR=\fIFMIN\fR]
[\fB\-y, --fmax\fR=\fIFMAX\fR]
[\fB\-s, --scale\fR=\fISCALE\fR]
[\fB\-c, --colormap\fR=\fICOLORMAP\fR]
[\fB\-k, --count\fR=\fICOUNT\fR]
[\fB\-t, --title\fR=\fITITLE\fR]
.IR [outfile]

.SH DESCRIPTION
\fBspecgram\fR generates nice looking spectrograms from raw data, based on the options provided in the command line.

The program has two output modes: file output when \fIoutfile\fR is provided and live output when \fB\-l, \-\-live\fR is provided.
The two modes are not necessarily mutually exclusive, but behaviour may differ based on other options.

The program has two input modes: file input when the \fB\-i, \-\-input\fR option is provided, or stdin input otherwise (default behaviour).

In file input mode, the file is read in a synchronous manner until EOF is reached, and the spectrogram is generated into \fIoutfile\fR.
Only file output is allowed in this mode, so \fIoutfile\fR is mandatory and \fB\-l, \-\-live\fR is disallowed.

In stdin input mode, data is read in an asynchronous manner and for an indefinite amount of time.
The spectrogram is updated as new data arrives and output is buffered in memory.

In either input modes, when receiving SIGINT (i.e. by user pressing CTRL+C in the terminal), the program stops listening to data and exits gracefully, writing \fIoutfile\fR if provided.
If the program receives SIGINT again it will forcefully quit.

See \fBEXAMPLES\fR for common use cases.

.SH OPTIONS

.TP
.BR \fIoutfile\fR
Optional output image file. Check \fISFML\fR documentation for supported file types, but PNG files are recommended.

Either \fIoutfile\fR must be specified, \fB\-l, \-\-live\fR must be set, or both.

.TP
.BR \-h ", " \-\-help
Display help message.

.TP
.BR \-v ", " \-\-version
Display program version.

.TP
\fBINPUT OPTIONS\fR

.TP
.BR \-i ", " \-\-input =\fIINFILE\fR
Input file name.
If option is provided, \fIINFILE\fR is handled as a raw dump of values (i.e. input file format is not considered).
The program will stop when EOF is encountered.

If option is not provided, data will be read indefinitely from stdin.

.TP
.BR \-r ", " \-\-rate =\fIRATE\fR
Rate, in Hz, of the input data.
Used for display purposes and computation of other parameters.
Program will not perform rate limiting based on this parameter and will consume data as fast as it is available on stdin.

Default is 44100.

.TP
.BR \-d ", " \-\-datatype =\fIDATA_TYPE\fR
Data type of the input data.
Is formed from a type prefix (\fIu\fR for unsigned integer, \fIs\fR for signed integer, \fIf\fR for floating point, \fIc\fR for complex) and a size suffix (in bits: 8, 16, 32, 64, 128).

Valid values are: u8, u16, u32, u64, s8, s16, s32, s64, f32, f64, c64, c128.

Complex types are pairs of two floating point values containing the real and imaginary part of the number, in this order.
The size of the complex data type includes both parts (e.g. c64 indicates that both the real and imaginary parts are stored as 32-bit floating point numbers).

Default is s16.

.TP
.BR \-b ", " \-\-block_size =\fIBLOCK_SIZE\fR
Block size, in data type sized values, that are to be read at a time from stdin.
The larger this value, the larger the latency of the live spectrogram.

Default is 256.


.TP
\fBFFT OPTIONS\fR

.TP
.BR \-f ", " \-\-fft_width =\fIFFT_WIDTH\fR
FFT window width.
Lower values provide worse frequency resolution but better temporal resolution. Higher values provide better frequency resolution but worse temporal resolution.

Default is 1024.

.TP
.BR \-g ", " \-\-fft_stride =\fIFFT_STRIDE\fR
Stride (distance) between two subsequent FFT windows in the input.
Value can be less than \fIFFT_WIDTH\fR in which case there is overlap between windows, larger than \fIFFT_WIDTH\fR in which case information is lost, or equal to \fIFFT_WIDTH\fR.

Default is 1024.

.TP
.BR \-n ", " \-\-window_function =\fIWIN_FUNC\fR
Window function to be applied to the input window before FFT is computed.
Because of the discrete nature of the FFT, a periodic assumption is made of the input window.
In reality the input window is mostly never periodic, so window functions are used to taper off the ends of the window and avoid jumps between the beginning and end of the input window.

Valid values are: none, hann.

Default is hann.

.TP
.BR \-s ", " \-\-alias =\fIALIAS\fR
Specifies whether aliasing between negative and positive frequencies exists.
If set to true (\fI1\fR), then the bins of corresponding negative and positive frequencies are summed on both sides.

Default is \fI0\fR (no) for complex data types and \fI1\fR (yes) otherwise.

.TP
\fBDISPLAY OPTIONS\fR

.TP
.BR \-q ", " \-\-no_resampling
Disables resampling of output FFT windows, generating clean and crisp output.
This invalidates the use of \fB\-w, \-\-width\fR, as the actual display width is computed from other parameters.

.TP
.BR \-w ", " \-\-width =\fIWIDTH\fR
Display width of spectrogram.
Output FFT windows are resampled to this width, colorized and displayed.
Cannot be used with \fB\-q, \-\-no_resampling\fR.

Default is 512.

.TP
.BR \-x ", " \-\-fmin =\fIFMIN\fR
Lower bound of the displayed frequency spectrum, in Hz.

Default is -\fIRATE\fR/2 for complex data types, 0 otherwise.

.TP
.BR \-y ", " \-\-fmax =\fIFMAX\fR
Upper bound of the displayed frequency spectrum, in Hz.

Default is \fIRATE\fR/2.

.TP
.BR \-s ", " \-\-scale =\fISCALE\fR
Spectrogram scale.
Valid values are: dBFS.

Default is dBFS.

.TP
.BR \-c ", " \-\-colormap =\fICOLORMAP\fR
Color scheme.
Valid values are: jet, gray, purple, blue, green, orange, red.

If \fICOLORMAP\fR is neither of these values, then it is interpreted either as a 6 character hex string (RGB color) or an 8 character hex string (RGBA color).
In this case, a gradient between the background color and the color specified by the hex string will be used as a color map.

Default is jet.

.TP
.BR \-a ", " \-\-axes
Displays axes.

.TP
.BR \-e ", " \-\-legend
Displays legend. Entails \fB\-a, \-\-axes\fR.

This is enabled in live view, but only for the live window (i.e. if both live view and file output are used, then file output will only display a legend if this flag is set by the user).

.TP
.BR \-z ", " \-\-horizontal
Rotates histogram 90 degrees counter clockwise, making it readable left to right.

.TP
\fBLIVE OPTIONS\fR

.TP
.BR \-l ", " \-\-live
Displays a live rendering of the spectrogram being computed.

Either this flag must be set, \fIoutfile\fR must be specified, or both.

.TP
.BR \-k ", " \-\-count =\fICOUNT\fR
Number of FFT windows displayed in live spectrogram.

Default is 512.

.TP
.BR \-t ", " \-\-title =\fITITLE\fR
Title of live window.

Default is 'Spectrogram'.

.SH EXAMPLE

.SH BUGS

Frequency bounds (\fB\-x, \-\-fmin\fR and \fB\-y, \-\-fmax\fR) may exceed FFT window frequency limits when resampling is enabled (i.e. default behaviour), but may not do so when resampling is disabled (\fB\-q, \-\-no_resampling\fR).
This inconsistency is known behaviour and, while not necessarily nice, does not impact usability in a meaningful manner.
Ideally exceeding these limits should be allowed in both cases, and zero padding should be performed.

Moreover, when using the \fB\-q, \-\-no_resampling\fR flag, the frequency limits are
Â±\fIRATE\fR*(\fIFFT_WIDTH\fR-1)/(2*\fIFFT_WIDTH\fR) when \fIFFT_WIDTH\fR is odd
and -\fIRATE\fR*(\fIFFT_WIDTH\fR-2)/(2*\fIFFT_WIDTH\fR) to \fIRATE\fR/2 when \fIFFT_WIDTH\fR is even.
This is a bit different from the behaviour of NumPy's implementation of fftfreq and aims to make it easier to display the Nyquist frequency component for non-complex inputs.

The above upper limits are enforced silently in the default values of \fB\-x, \-\-fmin\fR and \fB\-y, \-\-fmax\fR, but for brevity are not mentioned in this manpage's \fBOPTIONS\fR section or in the program help screen.

.SH AUTHORS

Copyright (c) 2020 Vasile Vilvoiu <vasi.vilvoiu@gmail.com>

\fBspecgram\fR is free software; you can redistribute it and/or modify it under the terms of the MIT license.

.SH ACKNOWLEDGEMENTS

Program icon by Flavia Fabian, released under the CC-BY-SA 4.0 license.

Share Tech Mono font by Carrois Type Design, released under Open Font License.